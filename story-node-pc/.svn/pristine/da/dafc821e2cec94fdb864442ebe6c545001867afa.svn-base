<!-- <!DOCTYPE html> -->
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>作者中心 • 注册</title>
  <link href="http://c.hotread.com/assets/images/favico.ico" rel="shortcut icon">
  <link rel="stylesheet" href="http://c.hotread.com/assets/styles/normalize.min.css">
  <link rel="stylesheet" href="/assets/styles/author-register.min.css">
  <style>[v-cloak] { visibility: hidden;  }</style>
</head>
<body v-cloak>
  <header class="header">
    <div class="container">
      <a class="slogan" href="http://author.hotread.com">
        <img src="http://c.hotread.com/wap/images/3x/slogan.png" alt="">
      </a>
    </div>
  </header>

  <div class="container register">

    <form class="form" @submit.prevent="doRegister">
      <h3>作者注册</h3>
      <p class="login-go">已有账号？<a href="http://author.hotread.com/login">立即登录</a></p>
      <div class="form-horizontal">

        <div class="form-group">
          <label class="author-icon icon-user"></label>
          <div class="form-control" :class="{'error': target=='mobilephone', 'has-value': mobilephone}" data-placeholder="用户名（手机号）">
            <input type="text" v-model="mobilephone">
          </div>
        </div>

        <div class="form-group">
          <label class="author-icon icon-message"></label>
          <div class="form-control message" :class="{'error': target=='clientCode', 'has-value': clientCode}" data-placeholder="验证码">
            <input type="text" v-model="clientCode">
          </div>
          <span class="code-btn" v-if="sending">{{count}}s后重新获取</span>
          <span class="code-btn" v-else @click="sendMessage">获取短信验证码</span>
        </div>

        <div class="form-group">
          <label class="author-icon icon-pwd"></label>
          <div class="form-control" :class="{'error': target=='password', 'has-value': password}" data-placeholder="不少于6位密码">
            <input type="password" v-model="password">
          </div>
        </div>

        <div class="form-group">
          <label class="author-icon icon-pwdc"></label>
          <div class="form-control" :class="{'error': target=='confirmPwd', 'has-value': confirmPwd}" data-placeholder="再次确认密码">
            <input type="password" v-model="confirmPwd">
          </div>
        </div>

        <div class="form-group">
          <label class="author-icon icon-pencil"></label>
          <div class="form-control" :class="{'error': target=='name', 'has-value': name}" data-placeholder="请输入笔名">
            <input type="text" v-model="name">
          </div>
        </div>

        <div class="form-group">
          <label class="author-icon icon-desc"></label>
          <div class="form-control" :class="{'error': target=='introduce', 'has-value': introduce}" data-placeholder="个人说明">
            <textarea @change="checkValue('introduce')" @keyup="checkValue('introduce')" 
              maxlength="150" v-model="introduce"></textarea>
            <span class="word-count">还可以输入 <em>{{wordCount1}}</em> 字</span>
          </div>
        </div>

        <div class="form-group">
          <label class="author-icon icon-book"></label>
          <div class="form-control" :class="{'error': target=='publishedStorys', 'has-value': publishedStorys}" data-placeholder="已发表过的作品说明">
            <textarea @change="checkValue('publishedStorys')" @keyup="checkValue('publishedStorys')" 
              maxlength="150" v-model="publishedStorys"></textarea>
            <span class="word-count">还可以输入 <em>{{wordCount2}}</em> 字</span>
          </div>
        </div>

        <div class="form-group">
          <label class="author-icon icon-userc"></label>
          <div class="form-control" :class="{'error': target=='realName', 'has-value': realName}" data-placeholder="真实姓名">
            <input type="text" v-model="realName">
          </div>
        </div>

        <div class="form-group">
          <label class="author-icon icon-qq"></label>
          <div class="form-control" :class="{'error': target=='contactWay1', 'has-value': contactWay1}" data-placeholder="QQ / MSN">
            <input type="text" v-model="contactWay1">
          </div>
        </div>

        <div class="form-group">
          <label class="author-icon icon-location"></label>
          <div class="form-control" :class="{'error': target=='contactWay2', 'has-value': contactWay2}" data-placeholder="联系地址">
            <input type="text" v-model="contactWay2">
          </div>
        </div>

        <div class="form-group">
          <label class="author-icon icon-code"></label>
          <div class="form-control" :class="{'error': target=='contactWay3', 'has-value': contactWay3}" data-placeholder="邮编">
            <input type="text" v-model="contactWay3">
          </div>
        </div>

        <div class="form-group">
          <label class="author-icon icon-card"></label>
          <div class="form-control" :class="{'error': target=='paperType', 'has-value': paperType}" data-placeholder="证件类型">
            <input type="text" tabindex="-1" readonly class="select-like" v-model="paperType">
            <select v-model="paperType" class="select-model">
              <option value="">--请选择--</option>
              <option :value="type" v-for="type in types">{{type}}</option>
            </select>
          </div>
        </div>

        <div class="form-group">
          <label class="author-icon icon-number"></label>
          <div class="form-control" :class="{'error': target=='paperInfo', 'has-value': paperInfo}" data-placeholder="证件号码">
            <input type="text" v-model="paperInfo">
          </div>
        </div>

        <div class="form-group">
          <label class="author-icon icon-home"></label>
          <div class="form-control" :class="{'error': target=='bankAddress', 'has-value': bankAddress}" data-placeholder="开户行全称">
            <input type="text" v-model="bankAddress">
          </div>
        </div>

        <div class="form-group">
          <label class="author-icon icon-account"></label>
          <div class="form-control" :class="{'error': target=='bankCard', 'has-value': bankCard}" data-placeholder="银行账号">
            <input type="text" v-model="bankCard">
          </div>
        </div>

        <div class="form-group">
          <div class="form-other">
            <p>说明：以上说明信息为必填项，一旦提交则无法自行修改，提交前请仔细核对！</p>
            <div class="agree">
              <span class="checkbox" :class="{'checked': checked}" @click="checked=!checked"></span>
              <a href="http://www.hotread.com/tops/agreement.html" target="_blank">同意作者注册协议</a>
            </div>
          </div>
        </div>
      </div>

      <div class="form-submit">
        <input type="submit" value="完 成" class="submit-btn">
      </div>

    </form>
    <span class="cloud cloud1"></span>
    <span class="cloud cloud2"></span>
    <span class="cloud cloud3"></span>
  </div>
  <script src="http://c.hotread.com/assets/js/vue.min.js"></script>
  <script>!function(e){function n(){}function t(e,n){return function(){e.apply(n,arguments)}}function o(e){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof e)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],s(e,this)}function i(e,n){for(;3===e._state;)e=e._value;return 0===e._state?void e._deferreds.push(n):(e._handled=!0,void o._immediateFn(function(){var t=1===e._state?n.onFulfilled:n.onRejected;if(null===t)return void(1===e._state?r:u)(n.promise,e._value);var o;try{o=t(e._value)}catch(i){return void u(n.promise,i)}r(n.promise,o)}))}function r(e,n){try{if(n===e)throw new TypeError("A promise cannot be resolved with itself.");if(n&&("object"==typeof n||"function"==typeof n)){var i=n.then;if(n instanceof o)return e._state=3,e._value=n,void f(e);if("function"==typeof i)return void s(t(i,n),e)}e._state=1,e._value=n,f(e)}catch(r){u(e,r)}}function u(e,n){e._state=2,e._value=n,f(e)}function f(e){2===e._state&&0===e._deferreds.length&&o._immediateFn(function(){e._handled||o._unhandledRejectionFn(e._value)});for(var n=0,t=e._deferreds.length;n<t;n++)i(e,e._deferreds[n]);e._deferreds=null}function c(e,n,t){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof n?n:null,this.promise=t}function s(e,n){var t=!1;try{e(function(e){t||(t=!0,r(n,e))},function(e){t||(t=!0,u(n,e))})}catch(o){if(t)return;t=!0,u(n,o)}}var a=setTimeout;o.prototype["catch"]=function(e){return this.then(null,e)},o.prototype.then=function(e,t){var o=new this.constructor(n);return i(this,new c(e,t,o)),o},o.all=function(e){var n=Array.prototype.slice.call(e);return new o(function(e,t){function o(r,u){try{if(u&&("object"==typeof u||"function"==typeof u)){var f=u.then;if("function"==typeof f)return void f.call(u,function(e){o(r,e)},t)}n[r]=u,0===--i&&e(n)}catch(c){t(c)}}if(0===n.length)return e([]);for(var i=n.length,r=0;r<n.length;r++)o(r,n[r])})},o.resolve=function(e){return e&&"object"==typeof e&&e.constructor===o?e:new o(function(n){n(e)})},o.reject=function(e){return new o(function(n,t){t(e)})},o.race=function(e){return new o(function(n,t){for(var o=0,i=e.length;o<i;o++)e[o].then(n,t)})},o._immediateFn="function"==typeof setImmediate&&function(e){setImmediate(e)}||function(e){a(e,0)},o._unhandledRejectionFn=function(e){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",e)},o._setImmediateFn=function(e){o._immediateFn=e},o._setUnhandledRejectionFn=function(e){o._unhandledRejectionFn=e},"undefined"!=typeof module&&module.exports?module.exports=o:e.Promise||(e.Promise=o)}(this);</script>
  <script src="http://c.hotread.com/assets/js/vue-resource.min.js"></script>
  <script>
    ;(function (Vue, win) {
      var COUNT = 60;
      new Vue({
        el: 'body',
        data: {
          checked: false,
          mobilephone: '',
          clientCode: '',
          password: '',
          confirmPwd: '',
          name: '',
          introduce: '',
          publishedStorys: '',
          realName: '',
          contactWay1: '',
          contactWay2: '',
          contactWay3: '',
          paperType: '',
          paperInfo: '',
          bankAddress: '',
          bankCard: '',
          target: '',
          types: ['身份证', '护照', '军官证'],
          sending: false,
          count: COUNT
        },
        computed: {
          wordCount1: function () {
            return 150 - this.introduce.length;
          },
          wordCount2: function () {
            return 150 - this.publishedStorys.length;
          },
        },
        methods: {
          doRegister: function () {
            if (!this.checked) {
              alert('请点击同意作者注册协议');
              return false;
            }
            this.$http.post('/author/register', {
              mobilephone: this.mobilephone,
              clientCode: this.clientCode,
              password: this.password,
              confirmPwd: this.confirmPwd,
              name: this.name,
              introduce: this.introduce.substr(0, 150),
              publishedStorys: this.publishedStorys.substr(0, 150),
              realName: this.realName,
              contactWay1: this.contactWay1,
              contactWay2: this.contactWay2,
              contactWay3: this.contactWay3,
              paperType: this.paperType,
              paperInfo: this.paperInfo,
              bankAddress: this.bankAddress,
              bankCard: this.bankCard
            }).then(function (resp) {
              var result = resp.body;
              if (result.error === 1) {
                this.target = result.target;
                alert(result.msg);
                return false;
              } else {
                this.target = '';
              }
              if (result.errorCode > 0) {
                alert(result.message);
              } else {
                alert('添加作者成功');
                location.href = 'http://author.hotread.com/login';
              }
            });
          },
          sendMessage: function () {
            if (!/^1\d{10}$/.test(this.mobilephone)) {
              alert('请输入11位手机号码');
              return false;
            }
            this.$http.post('/core/auth/recover/code', {
              mobilePhone: this.mobilephone
            });
            this.sending = true;
            this.counting();
          },
          counting: function () {
            var self = this;
            if (this.count > 1) {
              this.count -= 1;
              setTimeout(function () {
                self.counting();
              }, 1000);
            } else {
              this.sending = false;
              this.count = COUNT;
            }
          },
          checkValue: function (item) {
            if (this[item].length > 150) {
              this[item] = this[item].substr(0, 150);
            }
          }
        }
      });
    })(Vue, window);
  </script>
</body>
</html>